# Mode: encode or decode. Decode assumes you want to decode a message that was encoded based on these options
mode	:	decode
# input and output paths
input 	: 	input.txt
output 	: 	output.txt

# Encoder name. Currently available are
#	- SHIFT: shifts all chars by a given number
#	- SUB: substitutes patterns based on a dictionary
#	- OTP: One time pad encryption. Chaining with B64 is recommended.
#	- HEX: Hexadecimal number series 
#	- BIN: Binary
#	- RSA: Encrypt with RSA. Chaining with B64 is recommended. Use the RSAKeyGenerator tool to generate RSA keys. Does not handle data sizes over 245 bytes, as it's only meant to encrypt keys.
#	- B64: Base 64 String
# Planned (maybe)
#	- TRANSLATE
# You can chain several encoders by separating them with '+'. 
# For example use "RSA+B64" to encrypt using RSA, then encode the encrypted text in Base 64.
encoder	:	SHIFT+SUB+BIN+HEX+OTP+RSA+B64

# Logging properties
# Levels are ALL, FINEST, FINER, FINE, INFO, WARNING, SEVERE, OFF
log_file	:	logs/encoder.log
log_level	:	INFO

########## Individual encoder options ##########

### SHIFT options ### 
# shift will loop at char limits if specified (eg z+1 = a if min_char=a and max_char=z)
# Amount shifted. 1 is used if not specified
shift/amount 	: 	5
# Lowest char. No limit if not specified
shift/min_char	:	a
# highest char. No limit if not specified
shift/max_char	:	z	

### SUB options ###
sub/dictionary_path	:	dictionaries/ascii.txt
# Use this to generate a random dictionary in dictionary_path, if no dictionary exists.
sub/generate_dictionary_if_absent : true
# Decimal UTF-8 codes for keys to use for example, 65-90 specifies that we want all letters from A to Z
sub/rand_key_range : 32-126
# UTF-8 codes specifying the range of character which random dictionary generation can use as substitutes
sub/rand_value_range : 32-126
# The string to replace patterns (characters) that aren't in the dictionary
# Comment to keep leave unknown patterns unchanged
##sub/default_character: 	"?"


### OTP options ###
otp/file_path : otp/rand-otp.txt
# Generate key if the file doesn't exist
otp/generate_if_no_key: true


### RSA options ###
rsa/public_key_path : RSA/public.key
rsa/private_key_path : RSA/private.key

### RSA KeyGen options ###
rsa_kg/public_key_path : 	RSA/public2.key
rsa_kg/private_key_path : 	RSA/private2.key
rsa_kg/log_file		:	logs/RSAKeyGen.log
rsa_kg/log_level	:	INFO
